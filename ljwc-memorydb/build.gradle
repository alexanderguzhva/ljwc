apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

dependencies {
    testCompile group: 'junit', name: 'junit', version: "$junitVersion"

    compile project(':ljwc-abstractstorage')

    compile group: 'io.dropwizard', name: 'dropwizard-core', version: "$dropwizardVersion"
    compile group: 'io.dropwizard', name: 'dropwizard-client', version: "$dropwizardVersion"
}


mainClassName = 'com.gschw.ljwc.storage.memorydb.Main'

jar {
    manifest {
        attributes 'Main-Class': 'com.gschw.ljwc.storage.memorydb.Main'
    }
}

run {
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
}

applicationDistribution.from('src/main/resources') {
    include 'application.yaml'
    into 'config'
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage


task dockerCreateDockerfile(type: com.gschw.ljwc.LJWCCreateDockerfile) {
    exposePort 11010, 11011, 19010
}

task dockerCopyDistributionToDocker(type: com.gschw.ljwc.LJWCCopyDistributionToDocker) {
}

task dockerBuildDockerImage(type: DockerBuildImage) {
    dependsOn dockerCreateDockerfile
    dependsOn dockerCopyDistributionToDocker
    inputDir = dockerCreateDockerfile.destFile.parentFile
    tag = "gschw/${project.name}:${project.version}"
}


